<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">
	
	<resultMap type="chat" id="chatRoomResultSet">
		<result column="CHAT_NO" property="chatNo"/>
		<result column="FIRST_USER_ID" property="firstUserId"/>
		<result column="SECOND_USER_ID" property="secondUserId"/>
		<result column="CHAT_ENTER" property="chatEnter"/>
		<result column="CHAT_STATUS" property="chatStatus"/>
		<result column="NOT_READ" property="notRead"/>
	</resultMap>
	
	<resultMap type="chatContent" id="chatContentResultSet">
		<result column="CHAT_NO" property="chatNo"/>
		<result column="USER_NICKNAME" property="nickName"/>
		<result column="CHAT_CONTENT" property="chatContent"/>
		<result column="CHAT_CONTENT_ENTER" property="chatEnter"/>
		<result column="CHECK_CHAT_CONTENT" property="checkChatContent"/>
		<result column="CHAT_CONTENT_STATUS" property="chatContentStatus"/>
	</resultMap>
	
	<select id="searchChatRoom" parameterType="chat" resultMap="chatRoomResultSet">
		SELECT CHAT_NO
				,(SELECT USER_NICKNAME FROM USERINFO WHERE USER_ID=FIRST_USER_ID) FIRST_USER_ID
				,(SELECT USER_NICKNAME FROM USERINFO WHERE USER_ID=SECOND_USER_ID) SECOND_USER_ID
				,CHAT_ENTER
				,CHAT_STATUS
		FROM CHAT_LIST
		WHERE CHAT_STATUS ='Y'
		AND ((FIRST_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId}) 
        AND SECOND_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{secondUserId}))
        OR (SECOND_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId})
		AND FIRST_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{secondUserId})))
	</select>
	
	<insert id="makeChatRoom" parameterType="chat">
		INSERT INTO CHAT_LIST(CHAT_NO,FIRST_USER_ID,SECOND_USER_ID)
		VALUES(SEQ_CNO.NEXTVAL
				,(SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId})
				,(SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{secondUserId}))
	</insert>
	
	<select id="loadChatContent" parameterType="_int" resultMap="chatContentResultSet">
		SELECT CHAT_NO
				,U.USER_NICKNAME
				,CHAT_CONTENT
				,CHAT_CONTENT_ENTER
				,CHECK_CHAT_CONTENT
				,CHAT_CONTENT_STATUS
		FROM CHAT_CONTENT_LIST C
		LEFT JOIN USERINFO U ON (C.USER_ID=U.USER_ID)
		WHERE CHAT_NO = #{chatNo}
		AND CHAT_CONTENT_STATUS = 'Y'
		ORDER BY CHAT_CONTENT_ENTER ASC
	</select>
	
	<insert id="insertChatContent" parameterType="chatContent">
		INSERT INTO CHAT_CONTENT_LIST(CHAT_NO,USER_ID,CHAT_CONTENT)
		VALUES(#{chatNo},(SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{nickName}),#{chatContent})
	</insert>
	
	<select id="chatRoomSearch" parameterType="chat" resultMap="chatRoomResultSet">
		SELECT CHAT_NO
				,(SELECT USER_NICKNAME FROM USERINFO WHERE USER_ID=FIRST_USER_ID) FIRST_USER_ID
				,(SELECT USER_NICKNAME FROM USERINFO WHERE USER_ID=SECOND_USER_ID) SECOND_USER_ID
				,CHAT_ENTER
				,CHAT_STATUS
				,(SELECT COUNT(*) FROM CHAT_CONTENT_LIST 
					WHERE CHAT_NO = C.CHAT_NO 
					AND USER_ID != (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId})
					AND CHECK_CHAT_CONTENT = 'N'
					AND CHAT_CONTENT_STATUS = 'Y') NOT_READ
		FROM CHAT_LIST C 
		WHERE CHAT_STATUS ='Y'
		AND (FIRST_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId}) 
        OR SECOND_USER_ID LIKE (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId}))
	</select>
	
	<update id="updateReadContent" parameterType="chat">
		UPDATE CHAT_CONTENT_LIST
		SET CHECK_CHAT_CONTENT = 'Y'
		WHERE CHAT_NO = #{chatNo}
		AND USER_ID != (SELECT USER_ID FROM USERINFO WHERE USER_NICKNAME=#{firstUserId}) 
	</update>
	
	<update id="chatRoomDelete" parameterType="_int">
		UPDATE CHAT_LIST
		SET CHAT_STATUS = 'N'
		WHERE CHAT_NO = #{chatNo}
		AND CHAT_STATUS = 'Y'
	</update>
	
	<select id="findUserId" parameterType="string" resultType="string">
		SELECT USER_ID
		FROM USERINFO
		WHERE USER_NICKNAME = #{userNick}
	</select>
	
	<select id="roomState" parameterType="_int" resultType="string">
		SELECT CHAT_STATUS
		FROM CHAT_LIST
		WHERE CHAT_NO = #{chatNo}
	</select>
	
	<update id="chatContentDelete">
		UPDATE CHAT_CONTENT_LIST
		SET CHAT_CONTENT_STATUS = 'N'
			,CHECK_CHAT_CONTENT ='Y'
		WHERE CHAT_NO = #{chatNo}
	</update>
</mapper>
