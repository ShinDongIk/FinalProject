package com.payalot.enjoyforott.poster.controller;


import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.payalot.enjoyforott.crawl.crRecom;
import com.payalot.enjoyforott.favor.model.service.favorService;
import com.payalot.enjoyforott.poster.model.service.posterService;
import com.payalot.enjoyforott.poster.model.vo.Poster;
import com.payalot.enjoyforott.poster.model.vo.PosterRank;



@Controller
public class posterController{

	
	@Autowired
	private posterService posterservice;
	
	@Autowired
	private favorService favorservice;
	
	@RequestMapping("rank.ps")
	public String EnterRank(@RequestParam(value="name",defaultValue="kino") String name,
			Model model) throws InterruptedException {
		
		System.out.println(name);
		
		ArrayList<PosterRank> pr = posterservice.PostRank(name);
		
		
		model.addAttribute("pr",pr);
		System.out.println(pr);
		
		

		return "poster/RankingPs";
	}
	@ResponseBody
	@RequestMapping(value="ajax.do", produces="application/json; charset=UTF-8")
	public String ajaxMethod1(@RequestParam(value="name",defaultValue="kino") String name,
			HttpSession session,HttpServletResponse response) throws InterruptedException, IOException{
		
		ArrayList<PosterRank> pr = posterservice.PostRank(name);
		
		System.out.println(pr);
		
		
		response.setContentType("application/json; charset=UTF-8");
		
		return new Gson().toJson(pr);
	}
	
	@RequestMapping("recomend.ps")
	public String PosterRecomend() {
		
		return "poster/RecomPs";
	}
	
	
	@RequestMapping("detail.ps")
	public String PosterDetail(int postNo,Model mv) {
		
		Poster pst = posterservice.PostDetail(postNo);
		
		String str = pst.getPostOtt();
		String[] ottkind = str.split(",");
		
		
		
		mv.addAttribute("pst",pst);
		mv.addAttribute("ottkind",ottkind);
		
		
		
		return "poster/DetailPs";
	}
	
	@RequestMapping("list.ps")
	public String PosterList(String list,Model mv) {
		
		ArrayList<Poster> pst = posterservice.PostAction(list);	
		
		mv.addAttribute("pst",pst);
		
		
		
		return "poster/ListRecomPs";
	}
	@RequestMapping("auto.do")
	public void AutoInput() throws InterruptedException {
		
		//저장하고 싶은 장르별 작품수
		int num = 39;
		
		for(int i=1;i<6;i++) {
			ArrayList<Poster> pp = crRecom.OttRecom(i,num);
			for(Poster p:pp) {
				int result = posterservice.AutoInput(p);
				
				if(result > 0) {
					System.out.println("자동 인설트 성공");
				}else {
					System.out.println("자동 인설트 실패");
				}
			}
			}
				
		}
	@RequestMapping("good.do")
	public void Good(String postNo,String userId) {
	
		HashMap<String,String> good = new HashMap<String,String>();
		good.put(postNo1, postNo);
		good.put(userId1, userId);
		
		 int result = favorservice.favor(good);
		
		
	}
			
		
	}

